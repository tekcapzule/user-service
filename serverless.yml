service: user-service
variablesResolutionMode: 20210326
package:
  version: '0.0.1-SNAPSHOT'
  artifact: ./application/target/${self:service}-${self:package.version}-${self:provider.name}.jar
  excludeDevDependencies: true
provider:
  name: aws
  runtime: java11
  region: us-east-1
  memorySize: 1024
  timeout: 30
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "dynamodb:*"
      Resource: "*"
  environment:
    APPLICATION_ENVIRONMENT: ${opt:stage}
    CLOUD_REGION: US_East_1
functions:
  createUser:
    handler: org.springframework.cloud.function.adapter.aws.SpringBootApiGatewayRequestHandler
    events:
      - http:
          path: user/create
          method: post
          cors:
            origin: '*'
            headers:
              - Content-Type
              - Authorization
              - X-User-Login
              - X-Channel-Code
            allowCredentials: true
          request:
            schemas:
              application/json:
                schema: ${file(api-gateway/create.json)}
                name: CreateUserModel
                description: 'create user model'
    environment:
      SPRING_CLOUD_FUNCTION_DEFINITION: createFunction
  updateUser:
    handler: org.springframework.cloud.function.adapter.aws.SpringBootApiGatewayRequestHandler
    events:
      - http:
          path: user/update
          method: post
          cors:
            origin: '*'
            headers:
              - Content-Type
              - Authorization
              - X-User-Login
              - X-Channel-Code
            allowCredentials: true
          request:
            schemas:
              application/json:
                schema: ${file(api-gateway/update.json)}
                name: UpdateUserModel
                description: 'update user model'
    environment:
      SPRING_CLOUD_FUNCTION_DEFINITION: updateFunction
  disableUser:
    handler: org.springframework.cloud.function.adapter.aws.SpringBootApiGatewayRequestHandler
    events:
      - http:
          path: user/disable
          method: post
          cors:
            origin: '*'
            headers:
              - Content-Type
              - Authorization
              - X-User-Login
              - X-Channel-Code
            allowCredentials: true
          request:
            schemas:
              application/json:
                schema: ${file(api-gateway/disable.json)}
                name: DisableUserModel
                description: 'disable user model'

    environment:
      SPRING_CLOUD_FUNCTION_DEFINITION: disableFunction
  getUser:
    handler: org.springframework.cloud.function.adapter.aws.SpringBootApiGatewayRequestHandler
    events:
      - http:
          path: user/get
          method: post
          cors:
            origin: '*'
            headers:
              - Content-Type
              - Authorization
              - X-User-Login
              - X-Channel-Code
            allowCredentials: true
          request:
            schemas:
              application/json:
                schema: ${file(api-gateway/get.json)}
                name: GetUserModel
                description: 'get user model'
    environment:
      SPRING_CLOUD_FUNCTION_DEFINITION: getFunction
  followUser:
    handler: org.springframework.cloud.function.adapter.aws.SpringBootApiGatewayRequestHandler
    events:
      - http:
          path: user/follow
          method: post
          cors:
            origin: '*'
            headers:
              - Content-Type
              - Authorization
              - X-User-Login
              - X-Channel-Code
            allowCredentials: true
          request:
            schemas:
              application/json:
                schema: ${file(api-gateway/follow.json)}
                name: FollowUserModel
                description: 'follow user model'
    environment:
      SPRING_CLOUD_FUNCTION_DEFINITION: followFunction
  unfollowUser:
    handler: org.springframework.cloud.function.adapter.aws.SpringBootApiGatewayRequestHandler
    events:
      - http:
          path: user/unfollow
          method: post
          cors:
            origin: '*'
            headers:
              - Content-Type
              - Authorization
              - X-User-Login
              - X-Channel-Code
            allowCredentials: true
          request:
            schemas:
              application/json:
                schema: ${file(api-gateway/unfollow.json)}
                name: UnfollowUserModel
                description: 'unfollow user model'
    environment:
      SPRING_CLOUD_FUNCTION_DEFINITION: unfollowFunction
  addBookmarkUser:
    handler: org.springframework.cloud.function.adapter.aws.SpringBootApiGatewayRequestHandler
    events:
      - http:
          path: user/bookmark
          method: post
          cors:
            origin: '*'
            headers:
              - Content-Type
              - Authorization
              - X-User-Login
              - X-Channel-Code
            allowCredentials: true
          request:
            schemas:
              application/json:
                schema: ${file(api-gateway/bookmark.json)}
                name: AddBookmarkModel
                description: 'add bookmark model'
    environment:
      SPRING_CLOUD_FUNCTION_DEFINITION: bookmarkFunction
  removeBookmarkUser:
    handler: org.springframework.cloud.function.adapter.aws.SpringBootApiGatewayRequestHandler
    events:
      - http:
          path: user/removeBookmark
          method: post
          cors:
            origin: '*'
            headers:
              - Content-Type
              - Authorization
              - X-User-Login
              - X-Channel-Code
            allowCredentials: true
          request:
            schemas:
              application/json:
                schema: ${file(api-gateway/removebookmark.json)}
                name: RemoveBookmarkModel
                description: 'Remove bookmark model'
    environment:
      SPRING_CLOUD_FUNCTION_DEFINITION: removeBookmarkFunction

resources:
  extensions:
    CreateUserLambdaFunction:
      Properties:
        SnapStart:
          ApplyOn: PublishedVersions
    UpdateUserLambdaFunction:
      Properties:
        SnapStart:
          ApplyOn: PublishedVersions
    DisableUserLambdaFunction:
      Properties:
        SnapStart:
          ApplyOn: PublishedVersions
    GetUserLambdaFunction:
      Properties:
        SnapStart:
          ApplyOn: PublishedVersions
    FollowUserLambdaFunction:
      Properties:
        SnapStart:
          ApplyOn: PublishedVersions
    UnfollowUserLambdaFunction:
      Properties:
        SnapStart:
          ApplyOn: PublishedVersions
    AddBookmarkUserLambdaFunction:
      Properties:
        SnapStart:
          ApplyOn: PublishedVersions
    RemoveBookmarkUserLambdaFunction:
      Properties:
        SnapStart:
          ApplyOn: PublishedVersions
  Resources:
    userTableTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${opt:stage}User
        AttributeDefinitions:
          - AttributeName: userId
            AttributeType: S
        KeySchema:
          - AttributeName: userId
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1